<!DOCTYPE html>
<html>

<head>
    <meta http-equiv="Content-Type" content="text/html; Charset=UTF-8" />
    <title>Channels</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="css/keyboard.css" />

    <script type="text/javascript" src="libs/jquery-1.10.2.min.js"></script>
    <script type="text/javascript" src="libs/lodash.compat.min.js"></script>
    <script type="text/javascript" src="libs/event_emitter.js"></script>
    <script type="text/javascript" src="js/lib/smartbox.js"></script>
    <script type="text/javascript" src="js/lib/config.js"></script>
    <script type="text/javascript" src="js/lib/msgBusEntry.js"></script>
    <script type="text/javascript" src="js/lib/gapi.js"></script>

    <style type="text/css">
        p,
        li,
        h1,
        h2,
        h3,
        a {
            font-family: 'Roboto Mono', monospace;
        }

        .bg {
            position: fixed;
            top: 0;
            width: 100%;
            height: 100%;
            background: url(/img/bg.jpg) no-repeat;
            z-index: -10;
        }

        body {
            margin: 0;
            padding: 0;
            overflow: hidden;
            z-index: -10;
        }

        ul {
            height: 100%;
            overflow-y: scroll;
            margin: 0;
        }

        p {
            margin: 0;
        }

        .wrap {
            max-width: 980px;
            margin: 0 0 0 30px;
            z-index: -4;
        }

        a {
            color: #fff;
            text-decoration: none;
            font-weight: bold;
        }

        p {
            display: inline-block;
        }

        .playlist {
            position: relative;
            width: 350px;
            padding: 1px 0;
            background-color: none;
            transition: 0.5s ease-in-out;
        }

        .show {
            position: static;
        }

        .playlist ul {
            list-style: none;
            padding: 0;
            margin-top: 4%;
            overflow-y: auto;
        }

        .playlist li {
            padding: 2px;
            margin-bottom: 2px;
            background: #0173dd;
            font-size: 18px;
        }

        .playlist li.focus {
            background-color: #fff;
            color: #000;
        }

        .playlist li.focus a {
            color: #000;
        }

        li p {
            color: white;
            margin-right: 10px;
            padding: 5px 10px;
        }


        .playlist li.focus p {
            color: black;
        }

        .header {
            width: 100%;
            max-width: 1440px;
            margin: 0 auto;
            display: fixed;
            position: relative;
            padding: 15px;
            height: 40px;
        }

        .header h2 {
            float: left;
        }

        .header_images {
            float: right;
        }

        .header .focus {
            border: 2px solid yellow;
        }

        /* хром, сафари */
        ul::-webkit-scrollbar {
            width: 0;
        }

        /* ie 10+ */
        ul {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }

        /* фф (свойство больше не работает, других способов тоже нет)*/
        ul {
            overflow: -moz-scrollbars-none;
        }

        #allChannels {
            display: block;
        }


        .playlistLeftArrow {
            position: fixed;
            top: 50%;
            left: 2px;
        }

        .playlistArrow_block {
            position: fixed;
            left: 0;
            top: 0;
            height: 100%;
            width: 30px;
            background: rgb(0, 20, 147)
        }

        #log {
            position: absolute;
            top: 100px;
            left: 200px;
            z-index: 20;
        }

        #listChannels li {
            padding: 0.8rem 0;
            text-align: center;
            font-size: 24px;
        }

        .close {
            display: none !important;
        }

        .popups_block {
            position: absolute;
            bottom: 100px;
            right: 100px;
            z-index: 10;
        }

        .pause_block {
            position: absolute;
            z-index: 20;
            width: 100%;
            top: 50%;
        }

        .pause_block img {
            width: 70px;
            height: 70px;
        }

        .pause_block-inner {
            width: 70px;
            height: 70px;
            margin: 0 auto;
        }

        #pause {
            display: none;
        }

        .soundPopupMute {
            display: none;
        }

        .muteImg {
            color: white;
            width: 100px;
            height: 100px;
        }

        .soundPopup {
            display: none;
            float: left;
            width: 50px;
            text-align: center;
            padding: 10px;
            border-radius: 20px;
            z-index: 20;
            opacity: 1 !important;
        }

        .soundPopup p {
            color: white;
            font-size: 32px;
            font-weight: bold;
        }

        .soundPopup span {
            font-size: 40px;
            color: yellow;
        }

        .soundPopup img {
            width: 40px;
            height: 40px;
        }

        .hiddenItem {
            display: none;
        }

        .channelInputNum {
            display: none;
            position: fixed;
            top: 15px;
            right: 50px;
            padding: 35px;
            background: #000;
            font-size: 24px;
            color: #fff;
        }
    </style>
</head>

<body id="body" data-selectedChannel="<%= channelId %>">
    <!-- Передаю айди канала, чтобы фокусить его(также до этого перекинул его в url) -->
    <div class="bg"></div>
    <div class="wrap">
        <div class="playlist close" id="playlistChannels">
            <ul class="navigation-items" id="listChannels">
                <li class="nav-item" id="allChannelsCategory" data-playlist-id="allChannels">
                    <p>Все каналы</p>
                </li>
                <li class="nav-item" data-playlist-id="news">
                    <p>Новостные</p>
                </li>
                <li class="nav-item" data-playlist-id="filmsSerials">
                    <p>Фильмы/Сериалы</p>
                </li>
                <li class="nav-item" data-playlist-id="sport">
                    <p>Спортивные</p>
                </li>
                <li class="nav-item" data-playlist-id="music">
                    <p>Музыкальные</p>
                </li>
                <li class="nav-item" data-playlist-id="child">
                    <p>Детские</p>
                </li>
                <li class="nav-item" data-playlist-id="docum">
                    <p>Познавательные</p>
                </li>
                <li class="nav-item" data-playlist-id="inter">
                    <p>Международные</p>
                </li>
            </ul>
        </div>
        <div class="playlist" id='playlist'>
            <div class="playlistArrow_block">
                <img width="20" height="20" class="playlistLeftArrow" src="../img/play.svg" alt="arrowLeft">
            </div>
            <ul id="allChannels" class="activeCategory">
                <!-- с помощью шаблонизатора импортирую html разметку -->
                <%- include('./elements/channels/allChannels.ejs') %>
            </ul>
            <ul class="close" id="music">
                <!-- с помощью шаблонизатора импортирую html разметку -->
                <%- include('./elements/channels/music.ejs') %>
            </ul>
            <ul class="close" id="news">
                <!-- с помощью шаблонизатора импортирую html разметку -->
                <%- include('./elements/channels/news.ejs') %>
            </ul>
            <ul class="close" id="sport">
                <!-- с помощью шаблонизатора импортирую html разметку -->
                <%- include('./elements/channels/sport.ejs') %>
            </ul>
            <ul class="close" id="docum">
                <!-- с помощью шаблонизатора импортирую html разметку -->
                <%- include('./elements/channels/docum.ejs') %>
            </ul>
            <ul class="close" id="child">
                <!-- с помощью шаблонизатора импортирую html разметку -->
                <%- include('./elements/channels/child.ejs') %>
            </ul>
            <ul class="close" id="filmsSerials">
                <!-- с помощью шаблонизатора импортирую html разметку -->
                <%- include('./elements/channels/filmsSerials.ejs') %>
            </ul>
            <ul class="close" id="inter">
                <!-- с помощью шаблонизатора импортирую html разметку -->
                <%- include('./elements/channels/inter.ejs') %>
            </ul>
        </div>
        <div class="popups_block">
            <div class="soundPopup" id="soundPopup">
                <img id="soundPopupVol" src="/img/Vol.svg" alt="volume">
                <img id="soundPopupMute" src="/img/mute.svg" alt="mute">
                <div class="volume">
                    <p id="volume">0</p>
                </div>
            </div>
        </div>
        <p class="channelInputNum" id="channelInputNum"></p>

    </div>
    <script type="text/javascript">
        // получаю выбранный канал
        var selectedChannel = document.getElementById("body").getAttribute("data-selectedChannel")
        var numOfChannelInput = $('#channelInputNum')

        // навожусь фокусом
        $(selectedChannel).get(0).scrollIntoView($(selectedChannel).scrollTop - 100)
        $$nav.on()
        $$nav.current(selectedChannel); // метод из смартбокс фокуса на элемент


        //нахожу фокус элемент в активной категории(при запуске всегда категория 'все каналы') и запускаю плеер
        var channelFocusUrlNow = $('.activeCategory').find('.focus').attr('href')

         mb.send('display.osd_over_video', { value: false });
         mb.send('display.pip', { value: true, x: '32%', y: '2%', w: '1280', h: '720' });
         mb.send('player.enqueue', { url: channelFocusUrlNow, title: 'channel' });
         mb.send('player.play');

        // создаю переменную клика(нужна для клавиши 'ок')
        var numOfClick = 0

        // код нажатия на клавиши
        var clickItem = ''
        $(document).keydown(function (e) {

            // таймаут для закрытия попапа
            var timer = setTimeout(function () {
                $('#soundPopup').hide()
            }, 5000)

            // таймаут для переключение по каналам цифрами
            var timerInput = setTimeout(function () {
                numOfChannelInput.hide()
                var inputTextValue = '#channel' + numOfChannelInput.text()
                if (numOfChannelInput.text() !== '') {
                    $$nav.current($('.activeCategory').find(inputTextValue))
                    $('.focus').get(0).scrollIntoView($('.focus').scrollTop - 100); // скроллить к элементу 
                    mb.send('player.stop');
                    mb.send('display.osd_over_video', { value: false });
                    var channelUrl = $('.activeCategory').find('.focus').attr('href');
                    mb.send('player.enqueue', { url: channelUrl, title: 'channel' });
                    mb.send('player.play');
                }
                numOfChannelInput.text('')
            }, 4000)


            // получение клавиш приставки
            var key = config.app.keys[config.app.mode][e.keyCode];


            // фокус на элемент при клике на клавишу
            $('.focus').get(0).scrollIntoView($('.focus').scrollTop - 100); // скроллить к элементу 
            // скроллю чуть меньше чтобы лучше видно было элемент
            switch (key) {

                // назад
                case 'back':
                    $('.bg').removeClass('hiddenItem')
                    $('.playlist').removeClass('hiddenItem')
                    if ($('#allChannels').attr('class') === 'close') {
                        if ($('#playlistChannels').attr('class') === 'playlist close') {
                            if ($('body').attr('class') === 'hidden') {
                                mb.send('display.osd_over_video', { value: false });
                                mb.send('display.pip', { value: true, x: '32%', y: '2%', w: '1280', h: '720' });
                                $('body').removeClass('hidden')
                            } else {
                                $('#playlist').addClass('close')
                                $('#playlist ul').addClass('close')
                                $('#playlistChannels').removeClass('close')
                                $$nav.current('#allChannelsCategory');
                                $$nav.on('#listChannels');

                            }
                        } else {
                            $('#playlistChannels').addClass('close')
                            $('#playlist').removeClass('close')
                            $('#allChannels').removeClass('close')
                            $('.activeCategory').removeClass('activeCategory')
                            $('#allChannels').addClass('activeCategory')
                            $('#allChannels').show()
                            $$nav.on('#allChannels');
                            mb.send('player.stop');
                            mb.send('display.osd_over_video', { value: false });
                            var channelUrl = $('.activeCategory').find('.focus').attr('href');
                            mb.send('player.enqueue', { url: channelUrl, title: 'channel' });
                            mb.send('player.play');
                        }
                    } else if ($('body').attr('class') === 'hidden') {
                        mb.send('display.osd_over_video', { value: false });
                        mb.send('display.pip', { value: true, x: '32%', y: '2%', w: '1280', h: '720' });
                        $('.bg').removeClass('hiddenItem')
                        $('.playlist').removeClass('hiddenItem')
                        $('body').removeClass('hidden')
                    } else {
                        mb.send('player.stop');
                        document.location.href = '/'
                    }


                    numOfClick -= 1
                    clickItem = 'back'
                    break;
                    // лево
                case 'left':
                    if ($('body').attr('class') !== 'hidden') {
                        $('#playlist').addClass('close')
                        $('#playlist ul').addClass('close')
                        $('#playlistChannels').removeClass('close')
                        $('#playlist ul').removeClass('activeCategory')
                        $$nav.current('#allChannelsCategory');
                        $$nav.on('#listChannels');
                        clickItem = 'left'
                    }

                    break;
                    //верх
                case 'up':
                    setTimeout(function () {
                        if ($('#playlist').find('.focus').attr('href') !== undefined) {
                            if ($('body').attr('class') !== 'hidden') {
                                mb.send('player.stop');
                                mb.send('display.osd_over_video', { value: false });
                                var channelUrl = $('.activeCategory').find('.focus').attr('href');
                                mb.send('player.enqueue', { url: channelUrl, title: 'channel' });
                                mb.send('player.play');
                            }
                        }
                    }, 1000)
                    clickItem = 'up'
                    break;
                    // вниз
                case 'down':
                    setTimeout(function () {
                        if ($('#playlist').find('.focus').attr('href') !== undefined) {
                            if ($('body').attr('class') !== 'hidden') {
                                mb.send('player.stop');
                                mb.send('display.osd_over_video', { value: false });
                                var channelUrl = $('.activeCategory').find('.focus').attr('href');
                                mb.send('player.enqueue', { url: channelUrl, title: 'channel' });
                                mb.send('player.play');
                            }
                        }
                    }, 1000)
                    clickItem = 'down'
                    break;
                // ch+
                case 'chup':
                    console.log('chup')
                    if ($('.activeCategory').find('.focus').attr('href') !== undefined) {
                        if ($('body').attr('class') === 'hidden') {
                            mb.send('player.stop');
                            mb.send('display.osd_over_video', { value: false });
                            var prevChanneId = $('.activeCategory').find('.focus').attr('id');
                            var channelIdNum = Number(prevChanneId.split('l')[1]) + 1
                            var channelId = '#channel' + channelIdNum
                            $$nav.current($('.activeCategory').find(channelId))
                            var channelUrl = $('.activeCategory').find('.focus').attr('href');
                            mb.send('player.enqueue', { url: channelUrl, title: 'channel' });
                            mb.send('player.play');
                            console.log(channelUrl)
                        }
                    }
                    clickItem = 'chup'
                    break;
                    // ch-
                case 'chdown':
                    console.log('chdown')
                    if ($('.activeCategory').find('.focus').attr('href') !== undefined) {
                        if ($('body').attr('class') === 'hidden') {
                            mb.send('player.stop');
                            mb.send('display.osd_over_video', { value: false });
                            var prevChanneId = $('.activeCategory').find('.focus').attr('id');
                            var channelIdNum = Number(prevChanneId.split('l')[1]) - 1
                            var channelId = '#channel' + channelIdNum
                            $$nav.current($('.activeCategory').find(channelId))
                            var channelUrl = $('.activeCategory').find('.focus').attr('href');
                            mb.send('player.enqueue', { url: channelUrl, title: 'channel' });
                            mb.send('player.play');
                            console.log(channelUrl)
                        }
                    }
                    clickItem = 'chdown'
                    break;
                    // vol+
                case 'volup':
                    mb.send('player.volume', { delta: +10 })
                    var volumeValue = mb.get('nvram.av.volume').value
                    $("#volume").html(volumeValue)
                    if (Number(volumeValue) > 0) {
                        $("#soundPopupVol").show()
                        $("#soundPopupMute").hide()
                    }
                    $('#soundPopup').show()
                    timer
                    pressing_btn = 'volup'
                    break;
                    // vol-
                case 'voldown':
                    mb.send('player.volume', { delta: -10 })
                    var volumeValue = mb.get('nvram.av.volume').value
                    if (Number(volumeValue) === 0) {
                        $("#soundPopupVol").hide()
                        $("#soundPopupMute").show()
                    } else {
                        $("#soundPopupVol").show()
                        $("#soundPopupMute").hide()
                    }

                    $('#soundPopup').show()
                    $("#volume").html(volumeValue)
                    timer
                    pressing_btn = 'voldown'
                    break;
                    // mute
                case 'mute':
                    var volumeValue = mb.get('nvram.av.volume').value
                    var muteStatus = mb.get('player:mute');
                    if (muteStatus.value === 'false') {
                        mb.send('player.mute', { value: true })
                        $("#volume").html('0')
                        $("#soundPopupVol").hide()
                        $("#soundPopupMute").show()
                        $('#soundPopup').show()
                    } else {
                        mb.send('player.mute', { value: false })
                        $("#volume").html(volumeValue)
                        $("#soundPopupVol").show()
                        $("#soundPopupMute").hide()
                        $('#soundPopup').hide()
                    }
                    pressing_btn = 'mute'
                    break;
                    // ok
                case 'ok':
                    numOfClick += 1
                    if (numOfClick === 2) {
                        mb.send('display.osd_over_video', { value: false });
                        mb.send('display.pip', { value: true, x: '32%', y: '2%', w: '1280', h: '720' });
                        $('.bg').removeClass('hiddenItem')
                        $('.playlist').removeClass('hiddenItem')
                        $('body').removeClass('hidden')
                        numOfClick = 0
                    }
                    clickItem = 'ok'
                    break;
            }

            // методы клика на цифры
            switch (e.keyCode) {
                case 49:
                    numOfChannelInput.show()
                    console.log(numOfChannelInput.text().length)
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '1')
                    }

                    timerInput
                    break;
                case 50:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '2')
                    }
                    timerInput
                    break;
                case 51:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '3')
                    }
                    timerInput
                    break;
                case 52:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '4')
                    }
                    timerInput
                    break;
                case 53:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '5')
                    }
                    timerInput
                    break;
                case 54:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '6')
                    }
                    timerInput
                    break;
                case 55:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '7')
                    }
                    timerInput
                    break;
                case 56:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '8')
                    }
                    timerInput
                    break;
                case 57:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '9')
                    }
                    timerInput
                    break;
                case 48:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '0')
                    }

                    timerInput
                    break;
            }
        })

        // обработка нажатия клавиш в плейлисте(цифр)
        $('#playlist').keydown(function (e) {

            // таймер для переключение по цифрам
            var timerInput = setTimeout(function () {
                numOfChannelInput.hide()
                var inputTextValue = '#channel' + numOfChannelInput.text()
                if (numOfChannelInput.text() !== '') {
                    $$nav.current($('.activeCategory').find(inputTextValue))
                    $('.focus').get(0).scrollIntoView($('.focus').scrollTop - 100); // скроллить к элементу 
                     $('.focus').get(0).scrollIntoView($('.focus').scrollTop - 100); // скроллить к элементу 
                    mb.send('player.stop');
                    mb.send('display.osd_over_video', { value: false });
                    var channelUrl = $('.activeCategory').find('.focus').attr('href');
                    mb.send('player.enqueue', { url: channelUrl, title: 'channel' });
                    mb.send('player.play');
                }
                numOfChannelInput.text('')
            }, 4000)

            // Обработка цифр
            switch (e.keyCode) {
                case 49:
                    numOfChannelInput.show()
                    console.log(numOfChannelInput.text().length)
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '1')
                    }

                    timerInput
                    break;
                case 50:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '2')
                    }
                    timerInput
                    break;
                case 51:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '3')
                    }
                    timerInput
                    break;
                case 52:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '4')
                    }
                    timerInput
                    break;
                case 53:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '5')
                    }
                    timerInput
                    break;
                case 54:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '6')
                    }
                    timerInput
                    break;
                case 55:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '7')
                    }
                    timerInput
                    break;
                case 56:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '8')
                    }
                    timerInput
                    break;
                case 57:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '9')
                    }
                    timerInput
                    break;
                case 48:
                    numOfChannelInput.show()
                    if (numOfChannelInput.text().length < 3) {
                        numOfChannelInput.text(numOfChannelInput.text() + '0')
                    }

                    timerInput
                    break;
            }
        })
        // при клике на каналы перейти к его просмотру
        $('#playlist').find('li').click(function (e) {
            var channelUrl = e.currentTarget.getAttribute('href')
            if ($('.focus').attr('id') === e.currentTarget.getAttribute('id')) {
                 mb.send('display.osd_over_video', { value: true });
                mb.send('display.pip', { value: false, x: '0', y: '0', w: '100%', h: '100%' });
            } else {
                mb.send('player.stop');
                 mb.send('display.osd_over_video', { value: true });
                mb.send('display.pip', { value: false, x: '0', y: '0', w: '100%', h: '100%' });
                mb.send('player.enqueue', { url: channelUrl, title: 'channel' });
                mb.send('player.play');
            }
            $('.bg').addClass('hiddenItem')
            $('.playlist').addClass('hiddenItem')
            $('body').addClass('hidden')
        })

        // меню категорий
        $('#listChannels').find('li').click(function (e) {
            numOfClick = 1
            var channelId = '#' + e.currentTarget.getAttribute('data-playlist-id')
             mb.send('player.stop');
            $('#playlistChannels').addClass('close')
            $('#playlist').removeClass('close')
            $(channelId).removeClass('close')
            $(channelId).addClass('activeCategory')
            $$nav.on(channelId)
            var channelFocusUrl = $(channelId).find('.focus').attr('href')
            mb.send('display.osd_over_video', { value: false });
            mb.send('display.pip', { value: true, x: '32%', y: '2%', w: '1280', h: '720' });
            mb.send('player.enqueue', { url: channelFocusUrl, title: 'channel' });
            mb.send('player.play');

        })


    </script>
</body>

</html>